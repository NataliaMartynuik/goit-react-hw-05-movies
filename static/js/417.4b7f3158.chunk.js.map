{"version":3,"file":"static/js/417.4b7f3158.chunk.js","mappings":"mPAEaA,E,QAAUC,GAAAA,GAAH,qU,uCC0DpB,EAlDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GACwB,IAAxBA,EAAQT,KAAKU,QAGjBT,EAAQQ,EAAQT,KACjB,IACAW,OAAM,SAAAT,GACLC,EAAS,CAAED,MAAAA,GACZ,IACAU,SAAQ,kBAAMP,GAAW,EAAjB,GAGd,GAAE,CAACR,KAIF,SAAC,IAAD,WAEE,UAACF,EAAD,WACES,IAAW,SAACS,EAAA,EAAD,IACXX,IAAS,SAACY,EAAA,EAAD,IACRd,EAAKe,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChC,OACE,2BACE,gBACEC,IAAKD,EAAY,UAAME,EAAAA,GAAN,YAAsBF,GAAiBG,EACxDC,IAAKN,KACP,4BACE,kCAAUA,MACV,uCAAeC,UANVF,EAUZ,QAIR,C,gFCxDYQ,E,QAAe5B,GAAAA,IAAH,mH,SCCZ6B,EAAY,WACvB,OACE,SAACD,EAAD,CAAcE,KAAK,QAAnB,UACE,gBAAKN,IAAKO,EAAYC,MAAM,MAAML,IAAI,WAG3C,C,2NCPKM,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMT,EAAe,kCAEfU,EAAkB,mCAAG,oGACTD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhC,cAC1BG,EAD0B,yBAEzBA,EAASC,KAAKxB,SAFW,2CAAH,qDAKlByB,EAAgB,mCAAG,WAAMC,GAAN,uFACPL,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDM,IAD7C,cACxBH,EADwB,yBAEvBA,EAASC,KAAKxB,SAFS,2CAAH,sDAKhB2B,EAAiB,mCAAG,WAAMpB,GAAN,uFACRc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,oBAAkCa,IAD1B,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAiB,mCAAG,WAAMrB,GAAN,uFACRc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ca,IADlC,cACzBG,EADyB,yBAExBA,EAASC,KAAKxB,SAFU,2CAAH,sDAKjBF,EAAiB,mCAAG,WAAMS,GAAN,uFACRc,EAAAA,GAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ca,IADlC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 16px;\n  margin: auto, 10px;\n  padding: 0;\n  list-style: none;\n  & p {\n    font-weight: 500;\n    font-size: 14px;\n    \n  }\n  & img {\n    border-radius: 5px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCredits } from 'fetchApi';\nimport { BASE_URL_IMG } from 'fetchApi';\nimport default_img from '../images/default_img.png';\nimport { Wrapper } from './Cast.styled';\nimport { Box } from '../Box/Box.styled';\nimport { Loader } from '../Loader/Loader';\nimport { ErrorView } from '../Error/Error';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n \n  useEffect(() => {\n    const getMoviesCast = () => {\n      setLoading(true);\n      fetchMovieCredits(movieId)\n        .then(results => {\n          if (results.cast.length === 0) {\n            return;\n          }\n          setCast(results.cast)\n        })\n        .catch(error => {\n          setError({ error })\n        })\n        .finally(() => setLoading(false))\n    };\n    getMoviesCast();\n  }, [movieId]);\n\n\n  return (\n    <Box>\n      \n      <Wrapper>\n       {loading && <Loader/>}\n       {error && <ErrorView />}\n        {cast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <img\n                src={profile_path ? `${BASE_URL_IMG}/${profile_path}` : default_img}\n                alt={name} />\n              <div>\n                <p>Name: {name}</p>\n                <p>Character: {character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </Wrapper>\n    </Box>\n  );\n};\n\nexport default Cast;","import styled from 'styled-components';\n\nexport const WrapperError = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n`","import errorImage from '../images/error.webp';\nimport { WrapperError } from './Error.styled'\n\nexport const ErrorView = () => {\n  return (\n    <WrapperError role=\"alert\">\n      <img src={errorImage} width=\"600\" alt=\"error\" />\n    </WrapperError>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = '67411ce4d5e0b6db7c1c44c04cce0d92';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};"],"names":["Wrapper","styled","movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchMovieCredits","then","results","length","catch","finally","Loader","Error","map","id","name","character","profile_path","src","BASE_URL_IMG","default_img","alt","WrapperError","ErrorView","role","errorImage","width","API_KEY","axios","fetchTrendingMovie","response","data","fetchMovieSearch","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}