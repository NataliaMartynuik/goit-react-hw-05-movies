{"version":3,"file":"static/js/607.e1163b44.chunk.js","mappings":"gMAEaA,E,QAAeC,GAAAA,IAAH,mH,SCCZC,EAAY,WACvB,OACE,SAACF,EAAD,CAAcG,KAAK,QAAnB,UACE,gBAAKC,IAAKC,EAAYC,MAAM,MAAMC,IAAI,WAG3C,C,sICPYC,EAAcP,EAAAA,GAAAA,GAAH,uKAWXQ,EAAOR,EAAAA,GAAAA,EAAH,yF,6BCuCjB,EA7CgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GACmB,IAAnBA,EAAQC,QAGZT,EAAUQ,EACX,IACAE,OAAM,SAAAT,GACLC,EAAS,CAAED,MAAAA,GACZ,IACAU,SAAQ,kBAAMP,GAAW,EAAjB,GAGd,GAAE,CAACR,KAIF,UAACF,EAAD,WACIS,IAAW,SAACS,EAAA,EAAD,IACXX,IAAS,SAACY,EAAA,EAAD,IACTd,EACEA,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACE,wCAAgBD,MAChB,uBAAIC,MAFGF,EADA,KAOZ,SAACpB,EAAD,0DAKR,C,2NChDKuB,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAe,kCAEfC,EAAkB,mCAAG,oGACTF,EAAAA,GAAAA,IAAA,sCAAyCD,IADhC,cAC1BI,EAD0B,yBAEzBA,EAASC,KAAKf,SAFW,2CAAH,qDAKlBgB,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,IAD7C,cACxBH,EADwB,yBAEvBA,EAASC,KAAKf,SAFS,2CAAH,sDAKhBkB,EAAiB,mCAAG,WAAMX,GAAN,uFACRI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCG,IAD1B,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBjB,EAAiB,mCAAG,WAAMS,GAAN,uFACRI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IADlC,cACzBI,EADyB,yBAExBA,EAASC,KAAKf,SAFU,2CAAH,sDAKjBmB,EAAiB,mCAAG,WAAMZ,GAAN,uFACRI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CG,IADlC,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qD","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperError = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n`","import errorImage from '../images/error.webp';\nimport { WrapperError } from './Error.styled'\n\nexport const ErrorView = () => {\n  return (\n    <WrapperError role=\"alert\">\n      <img src={errorImage} width=\"600\" alt=\"error\" />\n    </WrapperError>\n  );\n}","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style-type: disclosure-open;\n  margin-left: 20px;\n  & li {\n    margin-bottom: 20px;\n  }\n  & li span {\n    font-weight: 500;\n  }\n`;\n\nexport const Text = styled.p`\n   font-size: 20px;\n   font-weight: 600;\n   margin-top: 10px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'fetchApi';\nimport { ReviewsList, Text } from './Reviews.styled';\nimport { Loader } from '../Loader/Loader';\nimport { ErrorView } from '../Error/Error';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const getMoviesReview = () => {\n      setLoading(true);\n      fetchMovieReviews(movieId)\n        .then(results => {\n          if (results.length === 0) {\n            return;\n          }\n          setReview(results)\n        })\n        .catch(error => {\n          setError({ error })\n        })\n        .finally(() => setLoading(false))\n    };\n    getMoviesReview();\n  }, [movieId]);\n\n  return (\n    \n    <ReviewsList>\n       {loading && <Loader/>}\n       {error && <ErrorView />}\n       {review ? \n          review.map(({ id, author, content }) => (\n            <li key={id}>\n              <span> Author: {author}</span>\n              <p>{content}</p>\n            </li>\n          ))\n        \n       : <Text>We don't have any reviews for this movie.</Text>}\n      \n        </ReviewsList>\n   \n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '67411ce4d5e0b6db7c1c44c04cce0d92';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};"],"names":["WrapperError","styled","ErrorView","role","src","errorImage","width","alt","ReviewsList","Text","movieId","useParams","useState","review","setReview","error","setError","loading","setLoading","useEffect","fetchMovieReviews","then","results","length","catch","finally","Loader","Error","map","id","author","content","API_KEY","axios","BASE_URL_IMG","fetchTrendingMovie","response","data","fetchMovieSearch","query","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}